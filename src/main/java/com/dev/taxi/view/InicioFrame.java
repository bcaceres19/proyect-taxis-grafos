/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.dev.taxi.view;

import com.dev.taxi.dto.RespuestaGrafoDto;
import com.dev.taxi.service.ITaxiService;
import com.dev.taxi.service.impl.TaxiService;
import com.dev.taxi.utils.constant.Constantes;
import static com.dev.taxi.utils.constant.Constantes.*;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import lombok.extern.log4j.Log4j2;


/**
 * La clase {@code InicioFrame} representa la ventana principal de la aplicaci칩n.
 * Gestiona la configuraci칩n inicial y la interacci칩n de los componentes de la interfaz
 * de usuario, tales como botones y 치reas de color para las zonas y rutas.
 */
@Log4j2
public class InicioFrame extends javax.swing.JFrame {

    private String lugarInicioTaxi;
    private String lugarInicioPersona;
    private String lugarFinalPersona;
    private Map<String, Map<String, List<javax.swing.JButton>>> listadoBotonesZonas = new LinkedHashMap<>();
    private Map<String, javax.swing.JButton> botonesLugares = new HashMap<>();
    private ITaxiService itaxiService;
    private RespuestaGrafoDto trazaTaxiRespuesta;
    private RespuestaGrafoDto trazaPersonaRespuesta;
    private Map<String, JButton> botonesTaxis = new HashMap<>();
    private Map<String, JButton> botonesPersonas = new HashMap<>();

    /**
     * Creates new form Inicio
     */
    public InicioFrame() {
        initComponents();
        this.itaxiService = new TaxiService();
        this.botonesLugares.put(BOTON_I, this.zonaI);
        this.botonesLugares.put(BOTON_A, this.zonaA);
        this.botonesLugares.put(BOTON_B, this.zonaB);
        this.botonesLugares.put(BOTON_C, this.zonaC);
        this.botonesLugares.put(BOTON_D, this.zonaD);
        this.botonesLugares.put(BOTON_E, this.zonaE);
        this.botonesLugares.put(BOTON_F, this.zonaF);
        this.botonesLugares.put(BOTON_T, this.zonaT);
        this.lugarPersona();
        this.lugarTaxi();
        this.simular1.setEnabled(false);
        this.trazaTaxi.setEnabled(false);
        this.trazaPersona.setEnabled(false);
        this.ambasTrazas.setEnabled(false);
        this.core.setEnabled(false);
    }

    private void lugarPersona() {
        List<String> claves = new ArrayList<>(botonesLugares.keySet());
        while (true) {
            Random random = new Random();
            String clave = claves.get(random.nextInt(claves.size()));
            if (!botonesLugares.get(clave).getBackground().equals(Color.RED)
                    && !botonesLugares.get(clave).getBackground().equals(Color.YELLOW)
                    && !botonesLugares.get(clave).getBackground().equals(Color.BLUE)) {
                this.lugarInicioPersona = clave;
                this.botonesLugares.get(this.lugarInicioPersona).setBackground(Color.RED);
                this.botonesPersonas.put(lugarInicioPersona, this.botonesLugares.get(this.lugarInicioPersona));
                break;
            }
        }

    }

    private void lugarTaxi() {
        JButton botonPersona;
        while (true) {
            List<String> claves = new ArrayList<>(botonesLugares.keySet());
            Random random = new Random();
            this.lugarInicioTaxi = claves.get(random.nextInt(claves.size()));
            botonPersona = botonesLugares.get(this.lugarInicioTaxi);
            if (!botonPersona.getBackground().equals(Color.RED)
                    && !botonPersona.getBackground().equals(Color.blue)
                    && !botonesTaxis.containsKey(lugarInicioTaxi)) {
                botonesLugares.get(this.lugarInicioTaxi).setBackground(Color.YELLOW);
                botonesTaxis.put(lugarInicioTaxi, botonesLugares.get(this.lugarInicioTaxi));
                break;
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zonaA = new javax.swing.JButton();
        zonaI = new javax.swing.JButton();
        zonaB = new javax.swing.JButton();
        zonaF = new javax.swing.JButton();
        zonaD = new javax.swing.JButton();
        zonaE = new javax.swing.JButton();
        zonaC = new javax.swing.JButton();
        zonaT = new javax.swing.JButton();
        tramoCtoF = new javax.swing.JButton();
        tramoBtoFPartOne = new javax.swing.JButton();
        tramoFtoTpartOne = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tramoCtoB = new javax.swing.JButton();
        tramoBtoA = new javax.swing.JButton();
        tramoDtoE = new javax.swing.JButton();
        tramoAtoD = new javax.swing.JButton();
        tramoItoCPartOne = new javax.swing.JButton();
        tramoBtoFPartTwo = new javax.swing.JButton();
        tramoFtoTpartTwo = new javax.swing.JButton();
        tramoBtoDPartTwo = new javax.swing.JButton();
        tramoB = new javax.swing.JButton();
        tramoInicio = new javax.swing.JButton();
        tramoItoCPartTwo = new javax.swing.JButton();
        tramoItoAPartTwo = new javax.swing.JButton();
        tramoItoAPartOne = new javax.swing.JButton();
        tramoEtoT = new javax.swing.JButton();
        tramoDtoTpartOne = new javax.swing.JButton();
        tramoBtoDPartOne = new javax.swing.JButton();
        tramoDtoTpartTwo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        simular1 = new javax.swing.JButton();
        trazaTaxi = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        reubicar1 = new javax.swing.JButton();
        trazaPersona = new javax.swing.JButton();
        ambasTrazas = new javax.swing.JButton();
        addTaxis = new javax.swing.JButton();
        addPersona = new javax.swing.JButton();
        core = new javax.swing.JToggleButton();
        valorKm = new javax.swing.JLabel();
        cantidadKm = new javax.swing.JLabel();
        destino = new javax.swing.JLabel();
        trazaTaxiText = new javax.swing.JLabel();
        trazaPersonaText1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        zonaA.setText("A");
        zonaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaAActionPerformed(evt);
            }
        });
        getContentPane().add(zonaA, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, -1, 33));

        zonaI.setText("I");
        zonaI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaIActionPerformed(evt);
            }
        });
        getContentPane().add(zonaI, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, 33));

        zonaB.setText("B");
        zonaB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaBActionPerformed(evt);
            }
        });
        getContentPane().add(zonaB, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, -1, 33));

        zonaF.setText("F");
        zonaF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaFActionPerformed(evt);
            }
        });
        getContentPane().add(zonaF, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, -1, 33));

        zonaD.setText("D");
        zonaD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaDActionPerformed(evt);
            }
        });
        getContentPane().add(zonaD, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, 33));

        zonaE.setText("E");
        zonaE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaEActionPerformed(evt);
            }
        });
        getContentPane().add(zonaE, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 100, -1, 33));

        zonaC.setText("C");
        zonaC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaCActionPerformed(evt);
            }
        });
        getContentPane().add(zonaC, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, -1, 33));

        zonaT.setText("T");
        zonaT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zonaTActionPerformed(evt);
            }
        });
        getContentPane().add(zonaT, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 100, -1, 33));

        tramoCtoF.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoCtoF.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoCtoF, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 170, 10));

        tramoBtoFPartOne.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoBtoFPartOne.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoBtoFPartOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 110, 10, 60));

        tramoFtoTpartOne.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoFtoTpartOne.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoFtoTpartOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 130, 10));

        jLabel1.setText("9km");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 30, -1));

        tramoCtoB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoCtoB.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoCtoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 10, 50));

        tramoBtoA.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoBtoA.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoBtoA, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 10, 50));

        tramoDtoE.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoDtoE.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoDtoE, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 60, 10, 50));

        tramoAtoD.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoAtoD.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoAtoD, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, 170, 10));

        tramoItoCPartOne.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoItoCPartOne.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoItoCPartOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 10, 80));

        tramoBtoFPartTwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoBtoFPartTwo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoBtoFPartTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 160, 110, 10));

        tramoFtoTpartTwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoFtoTpartTwo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoFtoTpartTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 120, 10, 70));

        tramoBtoDPartTwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoBtoDPartTwo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoBtoDPartTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 110, 10));

        tramoB.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoB.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 80, 10));

        tramoInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoInicio.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 60, 10));

        tramoItoCPartTwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoItoCPartTwo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoItoCPartTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, 60, 10));

        tramoItoAPartTwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoItoAPartTwo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoItoAPartTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 60, 10));

        tramoItoAPartOne.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoItoAPartOne.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoItoAPartOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 10, 80));

        tramoEtoT.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoEtoT.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoEtoT, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 110, 130, 10));

        tramoDtoTpartOne.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoDtoTpartOne.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoDtoTpartOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 130, 10));

        tramoBtoDPartOne.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoBtoDPartOne.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoBtoDPartOne, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 60, 10, 60));

        tramoDtoTpartTwo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tramoDtoTpartTwo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        getContentPane().add(tramoDtoTpartTwo, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 10, 70));

        jLabel2.setText("1km");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, -1, -1));

        jLabel3.setText("1km");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 30, -1));

        jLabel4.setText("2km");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 30, -1));

        jLabel5.setText("10km");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 50, -1));

        jLabel6.setText("2km");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 190, 30, -1));

        jLabel7.setText("18km");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 40, -1));

        jLabel8.setText("9km");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 30, -1));

        jLabel9.setText("2km");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(333, 80, 30, -1));

        jLabel10.setText("1km");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 30, -1));

        simular1.setText("Simular");
        simular1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simular1ActionPerformed(evt);
            }
        });
        getContentPane().add(simular1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 20, 80, -1));

        trazaTaxi.setText("Traza Taxi");
        trazaTaxi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazaTaxiActionPerformed(evt);
            }
        });
        getContentPane().add(trazaTaxi, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, -1, -1));

        jLabel11.setText("7km");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 30, -1));

        jLabel12.setText("6km");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 140, 30, -1));

        reubicar1.setText("Reubicar");
        reubicar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reubicar1ActionPerformed(evt);
            }
        });
        getContentPane().add(reubicar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 80, 80, -1));

        trazaPersona.setText("Traza Persona");
        trazaPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trazaPersonaActionPerformed(evt);
            }
        });
        getContentPane().add(trazaPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, -1, -1));

        ambasTrazas.setText("Ambas Trazas");
        ambasTrazas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambasTrazasActionPerformed(evt);
            }
        });
        getContentPane().add(ambasTrazas, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 230, 120, -1));

        addTaxis.setText("A침adir Taxi");
        addTaxis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTaxisActionPerformed(evt);
            }
        });
        getContentPane().add(addTaxis, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 170, 120, -1));

        addPersona.setText("A침adir Persona");
        addPersona.setToolTipText("");
        addPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPersonaActionPerformed(evt);
            }
        });
        getContentPane().add(addPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 200, 120, -1));

        core.setText("Core");
        core.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coreActionPerformed(evt);
            }
        });
        getContentPane().add(core, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, 80, -1));

        valorKm.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        valorKm.setText("0.0$");
        valorKm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(valorKm, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 90, 70));

        cantidadKm.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cantidadKm.setText("Km:0.0");
        getContentPane().add(cantidadKm, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 80, 70));

        destino.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        destino.setText("Destino:");
        getContentPane().add(destino, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 200, 150, 90));

        trazaTaxiText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        trazaTaxiText.setText("Traza Taxi:");
        getContentPane().add(trazaTaxiText, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 290, 250, -1));

        trazaPersonaText1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        trazaPersonaText1.setText("Traza Persona:");
        getContentPane().add(trazaPersonaText1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 250, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void zonaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaAActionPerformed
        this.lugarFinalPersona = this.zonaA.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_A);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaAActionPerformed

    private void zonaIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaIActionPerformed
        this.lugarFinalPersona = this.zonaI.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_I);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaIActionPerformed

    private void zonaBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaBActionPerformed
        this.lugarFinalPersona = this.zonaB.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_B);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaBActionPerformed

    private void zonaFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaFActionPerformed
        this.lugarFinalPersona = this.zonaF.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_F);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaFActionPerformed

    private void zonaDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaDActionPerformed
        this.lugarFinalPersona = this.zonaD.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_D);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaDActionPerformed

    private void zonaEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaEActionPerformed
        this.lugarFinalPersona = this.zonaE.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_E);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaEActionPerformed

    private void zonaCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaCActionPerformed
        this.lugarFinalPersona = this.zonaC.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_C);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaCActionPerformed

    private void zonaTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zonaTActionPerformed
        this.lugarFinalPersona = this.zonaT.getText();
        this.destino.setText(Constantes.DESTINO + Constantes.BOTON_T);
        this.simular1.setEnabled(true);
    }//GEN-LAST:event_zonaTActionPerformed

    private void simular1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simular1ActionPerformed
        if (lugarFinalPersona == null) {
            JOptionPane.showMessageDialog(null, "Debese tener un destino para simular", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            List<String> llavesTaxis = new ArrayList<>();
            List<String> llavesPersonas = new ArrayList<>();

            for (String llave : botonesTaxis.keySet()) {
                llavesTaxis.add(llave);
            }

            for (String llave : botonesPersonas.keySet()) {
                llavesPersonas.add(llave);
            }

            OpcionesFrame ventana = new OpcionesFrame(llavesTaxis, llavesPersonas, InicioFrame.this);
            ventana.setVisible(true);
        }
    }//GEN-LAST:event_simular1ActionPerformed

    public void ejecutarSimulador(String taxiSeleccionado, String personaSeleccionada) {
        trazaTaxiRespuesta = itaxiService.destinoMasCercano(taxiSeleccionado, personaSeleccionada);
        List<String> recorrido = new ArrayList<>();
        pintarCamino(null, null, true, false);

        pintarCaminoTaxi(trazaTaxiRespuesta, recorrido);
        trazaTaxiText.setText(TRAZA_TAXI_TEXT + trazaTaxiRespuesta.getDijkstra().getRecorrido());

        recorrido.clear();
        trazaPersonaRespuesta = itaxiService.destinoMasCercano(personaSeleccionada, lugarFinalPersona);
        pintarCaminoPersona(recorrido, true);
        this.lugarInicioPersona = recorrido.get(0);
        this.botonesTaxis.remove(taxiSeleccionado);
        valorKm.setText(trazaPersonaRespuesta.getDijkstra().getCantidad() * 2000 + "$");
        cantidadKm.setText("Km:" + String.valueOf(trazaPersonaRespuesta.getDijkstra().getCantidad()));
        trazaPersonaText1.setText(TRAZA_PERSONA_TEXT + trazaPersonaRespuesta.getDijkstra().getRecorrido());

        this.botonesPersonas.remove(personaSeleccionada);
        this.botonesPersonas.put(lugarInicioPersona, this.botonesLugares.get(lugarInicioPersona));
        this.lugarTaxi();
        for (String llave : botonesTaxis.keySet()) {
            botonesTaxis.get(llave).setBackground(Color.YELLOW);
        }
        for (String llave : botonesPersonas.keySet()) {
            if (!llave.equals(lugarFinalPersona)) {
                botonesPersonas.get(llave).setBackground(Color.red);
            }
        }
        this.trazaTaxi.setEnabled(true);
        this.trazaPersona.setEnabled(true);
        this.ambasTrazas.setEnabled(true);
        this.core.setEnabled(true);
    }

    private void pintarCaminoTaxi(RespuestaGrafoDto traza, List<String> recorrido) {
        for (String lugar : traza.getDijkstra().getRecorrido().split("-")) {
            recorrido.add(lugar);
            if (recorrido.size() == 2) {
                pintarCamino(Color.yellow, recorrido, false, false);
                recorrido.removeFirst();
            }
        }
    }

    private void pintarCaminoPersona(List<String> recorrido, boolean trazaFinal) {
        for (String lugar : trazaPersonaRespuesta.getDijkstra().getRecorrido().split("-")) {
            recorrido.add(lugar);
            if (recorrido.size() == 2) {
                pintarCamino(trazaFinal ? Color.BLUE : Color.RED, recorrido, false, false);
                recorrido.removeFirst();
            }
        }
    }

    private void trazaTaxiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazaTaxiActionPerformed
        List<String> recorrido = new ArrayList<>();

        pintarCamino(null, recorrido, true, false);

        pintarCaminoTaxi(trazaTaxiRespuesta, recorrido);


    }//GEN-LAST:event_trazaTaxiActionPerformed

    private void reubicar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reubicar1ActionPerformed
        pintarCamino(null, null, true, false);
        for (JButton boton : this.botonesLugares.values()) {
            if (boton.getBackground().equals(Color.RED) || boton.getBackground().equals(Color.YELLOW)) {
                boton.setBackground(null);
            }
        }
        botonesTaxis.clear();
        botonesPersonas.clear();
        lugarFinalPersona = null;
        simular1.setEnabled(false);
        this.lugarPersona();
        this.lugarTaxi();
    }//GEN-LAST:event_reubicar1ActionPerformed

    private void trazaPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trazaPersonaActionPerformed
        List<String> recorrido = new ArrayList<>();
        pintarCamino(null, null, true, false);
        pintarCaminoPersona(recorrido, false);
    }//GEN-LAST:event_trazaPersonaActionPerformed

    private void ambasTrazasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambasTrazasActionPerformed
        List<String> recorrido = new ArrayList<>();

        pintarCamino(null, null, true, false);
        pintarCaminoTaxi(trazaTaxiRespuesta, recorrido);

        recorrido.clear();
        pintarCaminoPersona(recorrido, true);

        for (String llave : botonesTaxis.keySet()) {
            botonesTaxis.get(llave).setBackground(Color.YELLOW);
        }

        for (String llave : botonesPersonas.keySet()) {
            if (!botonesLugares.get(llave).getBackground().equals(Color.BLUE)) {
                botonesPersonas.get(llave).setBackground(Color.red);
            }
        }

    }//GEN-LAST:event_ambasTrazasActionPerformed

    private void addTaxisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTaxisActionPerformed
        if (botonesTaxis.keySet().size() != 2) {
            lugarTaxi();
        } else {
            JOptionPane.showMessageDialog(null, "No puedes a침adir mas taxis, el maximo es 2", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addTaxisActionPerformed

    private void addPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPersonaActionPerformed
        if (botonesPersonas.keySet().size() != 2) {
            this.lugarPersona();
        } else {
            JOptionPane.showMessageDialog(null, "No puedes a침adir mas personas, el maximo es 2", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addPersonaActionPerformed

    private void coreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coreActionPerformed
        MatrizFrame matrizFrame = new MatrizFrame(trazaTaxiRespuesta.getMatriz());
        matrizFrame.setVisible(true);
    }//GEN-LAST:event_coreActionPerformed

    private void pintarCamino(Color color, List<String> recorrido, boolean todos, boolean boton) {

        // Mapa para almacenar las rutas y sus correspondientes acciones
        Map<String, Runnable> rutas = new HashMap<>();
        Map<String, Runnable> botones = new HashMap<>();

        // Zona I
        botones.put(Constantes.BOTON_I, () -> zonaI.setBackground(color));
        rutas.put(Constantes.RUTA_I_A, () -> {
            tramoInicio.setBackground(color);
            tramoItoAPartOne.setBackground(color);
            tramoItoAPartTwo.setBackground(color);
            zonaI.setBackground(color);
            zonaA.setBackground(color);
        });
        rutas.put(Constantes.RUTA_I_C, () -> {
            tramoInicio.setBackground(color);
            tramoItoCPartOne.setBackground(color);
            tramoItoCPartTwo.setBackground(color);
            zonaI.setBackground(null);
            zonaC.setBackground(color);
        });

// Zona A
        botones.put(Constantes.BOTON_A, () -> zonaA.setBackground(color));
        rutas.put(Constantes.RUTA_A_B, () -> {
            tramoBtoA.setBackground(color);
            zonaA.setBackground(null);
            zonaB.setBackground(color);
        });
        rutas.put(Constantes.RUTA_A_I, () -> {
            tramoItoAPartTwo.setBackground(color);
            tramoItoAPartOne.setBackground(color);
            tramoInicio.setBackground(color);
            zonaA.setBackground(null);
            zonaI.setBackground(color);
        });
        rutas.put(Constantes.RUTA_A_D, () -> {
            tramoAtoD.setBackground(color);
            zonaA.setBackground(null);
            zonaD.setBackground(color);
        });

// Zona B
        botones.put(Constantes.BOTON_B, () -> zonaB.setBackground(color));
        rutas.put(Constantes.RUTA_B_A, () -> {
            tramoBtoA.setBackground(color);
            zonaB.setBackground(null);
            zonaA.setBackground(color);
        });
        rutas.put(Constantes.RUTA_B_C, () -> {
            tramoCtoB.setBackground(color);
            zonaB.setBackground(null);
            zonaC.setBackground(color);
        });
        rutas.put(Constantes.RUTA_B_D, () -> {
            tramoB.setBackground(color);
            tramoBtoDPartOne.setBackground(color);
            tramoBtoDPartTwo.setBackground(color);
            zonaB.setBackground(null);
            zonaD.setBackground(color);
        });
        rutas.put(Constantes.RUTA_B_F, () -> {
            tramoB.setBackground(color);
            tramoBtoFPartOne.setBackground(color);
            tramoBtoFPartTwo.setBackground(color);
            zonaB.setBackground(null);
            zonaF.setBackground(color);
        });

// Zona C
        botones.put(Constantes.BOTON_C, () -> zonaC.setBackground(color));
        rutas.put(Constantes.RUTA_C_F, () -> {
            tramoCtoF.setBackground(color);
            zonaC.setBackground(null);
            zonaF.setBackground(color);
        });
        rutas.put(Constantes.RUTA_C_I, () -> {
            tramoItoCPartTwo.setBackground(color);
            tramoItoCPartOne.setBackground(color);
            tramoInicio.setBackground(color);
            zonaC.setBackground(null);
            zonaI.setBackground(color);
        });
        rutas.put(Constantes.RUTA_C_B, () -> {
            tramoCtoB.setBackground(color);
            zonaC.setBackground(null);
            zonaB.setBackground(color);
        });

// Zona D
        botones.put(Constantes.BOTON_D, () -> zonaD.setBackground(color));
        rutas.put(Constantes.RUTA_D_A, () -> {
            tramoAtoD.setBackground(color);
            zonaD.setBackground(null);
            zonaA.setBackground(color);
        });
        rutas.put(Constantes.RUTA_D_B, () -> {
            tramoBtoDPartTwo.setBackground(color);
            tramoBtoDPartOne.setBackground(color);
            tramoB.setBackground(color);
            zonaD.setBackground(null);
            zonaB.setBackground(color);
        });
        rutas.put(Constantes.RUTA_D_T, () -> {
            tramoDtoTpartOne.setBackground(color);
            tramoDtoTpartTwo.setBackground(color);
            zonaD.setBackground(null);
            zonaT.setBackground(color);
        });
        rutas.put(Constantes.RUTA_D_E, () -> {
            tramoDtoE.setBackground(color);
            zonaD.setBackground(null);
            zonaE.setBackground(color);
        });

// Zona E
        botones.put(Constantes.BOTON_E, () -> zonaE.setBackground(color));
        rutas.put(Constantes.RUTA_E_D, () -> {
            tramoDtoE.setBackground(color);
            zonaE.setBackground(null);
            zonaD.setBackground(color);
        });
        rutas.put(Constantes.RUTA_E_T, () -> {
            tramoEtoT.setBackground(color);
            zonaE.setBackground(null);
            zonaT.setBackground(color);
        });

// Zona F
        botones.put(Constantes.BOTON_F, () -> zonaF.setBackground(color));
        rutas.put(Constantes.RUTA_F_C, () -> {
            tramoCtoF.setBackground(color);
            zonaF.setBackground(null);
            zonaC.setBackground(color);
        });
        rutas.put(Constantes.RUTA_F_B, () -> {
            tramoBtoFPartTwo.setBackground(color);
            tramoBtoFPartOne.setBackground(color);
            tramoB.setBackground(color);
            zonaF.setBackground(null);
            zonaB.setBackground(color);
        });
        rutas.put(Constantes.RUTA_F_T, () -> {
            tramoFtoTpartOne.setBackground(color);
            tramoFtoTpartTwo.setBackground(color);
            zonaF.setBackground(null);
            zonaT.setBackground(color);
        });

// Zona T
        botones.put(Constantes.BOTON_T, () -> zonaT.setBackground(color));
        rutas.put(Constantes.RUTA_T_D, () -> {
            tramoDtoTpartTwo.setBackground(color);
            tramoDtoTpartOne.setBackground(color);
            zonaT.setBackground(null);
            zonaD.setBackground(color);
        });
        rutas.put(Constantes.RUTA_T_E, () -> {
            tramoEtoT.setBackground(color);
            zonaT.setBackground(null);
            zonaE.setBackground(color);
        });
        rutas.put(Constantes.RUTA_T_F, () -> {
            tramoFtoTpartTwo.setBackground(color);
            tramoFtoTpartOne.setBackground(color);
            zonaT.setBackground(null);
            zonaF.setBackground(color);
        });

        if (todos) {
            for (String llave : rutas.keySet()) {
                Runnable accion = rutas.get(llave);
                if (accion != null) {
                    accion.run();
                } else {
                    throw new IllegalArgumentException(ERROR_RUTA + llave);
                }
            }
        } else if (boton) {
            // Ejecutar la acci칩n correspondiente al recorrido
            String key = recorrido.get(0);
            Runnable accion = botones.get(key);
            if (accion != null) {
                accion.run();
            } else {
                throw new IllegalArgumentException(ERROR_RUTA + key);
            }
        } else {
            // Ejecutar la acci칩n correspondiente al recorrido
            String key = recorrido.get(0) + "-" + recorrido.get(1);
            Runnable accion = rutas.get(key);
            if (accion != null) {
                accion.run();
            } else {
                throw new IllegalArgumentException(ERROR_RUTA + key);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPersona;
    private javax.swing.JButton addTaxis;
    private javax.swing.JButton ambasTrazas;
    private javax.swing.JLabel cantidadKm;
    private javax.swing.JToggleButton core;
    private javax.swing.JLabel destino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton reubicar1;
    private javax.swing.JButton simular1;
    private javax.swing.JButton tramoAtoD;
    private javax.swing.JButton tramoB;
    private javax.swing.JButton tramoBtoA;
    private javax.swing.JButton tramoBtoDPartOne;
    private javax.swing.JButton tramoBtoDPartTwo;
    private javax.swing.JButton tramoBtoFPartOne;
    private javax.swing.JButton tramoBtoFPartTwo;
    private javax.swing.JButton tramoCtoB;
    private javax.swing.JButton tramoCtoF;
    private javax.swing.JButton tramoDtoE;
    private javax.swing.JButton tramoDtoTpartOne;
    private javax.swing.JButton tramoDtoTpartTwo;
    private javax.swing.JButton tramoEtoT;
    private javax.swing.JButton tramoFtoTpartOne;
    private javax.swing.JButton tramoFtoTpartTwo;
    private javax.swing.JButton tramoInicio;
    private javax.swing.JButton tramoItoAPartOne;
    private javax.swing.JButton tramoItoAPartTwo;
    private javax.swing.JButton tramoItoCPartOne;
    private javax.swing.JButton tramoItoCPartTwo;
    private javax.swing.JButton trazaPersona;
    private javax.swing.JLabel trazaPersonaText1;
    private javax.swing.JButton trazaTaxi;
    private javax.swing.JLabel trazaTaxiText;
    private javax.swing.JLabel valorKm;
    private javax.swing.JButton zonaA;
    private javax.swing.JButton zonaB;
    private javax.swing.JButton zonaC;
    private javax.swing.JButton zonaD;
    private javax.swing.JButton zonaE;
    private javax.swing.JButton zonaF;
    private javax.swing.JButton zonaI;
    private javax.swing.JButton zonaT;
    // End of variables declaration//GEN-END:variables
}
